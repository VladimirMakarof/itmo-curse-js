'use strict' 
означает, что мы используем новую версию js со строгими правилами. Ставим в начале файла. Если мы используем только новые возможности то можно не ставить его, и служит это для нахождение ошибок. 
===
данные мы сохраняем в переменные, информация сохраняется определенного типа. переменная это выделенная область памяти, с определенным именем. в этой области памяти находятся данные, и обращаются по названию переменных. своего рода контейнер, с одним типом данных.
в начале объявляем переменные. мы создаем впервые переменные. переменная начинается через let после имя переменной age после = оператор присваивания, и значение 26. Прочитать значение. console.log(age);
let age = 26; 
age = 27;

требования к названию переменной, на английском языке, с маленькой буквы, каждое последующее слов будет  заглавной (userLogin). Переменные чувствительны к регистру. 
==
let active, close = 1; 
переменная active без заданного значения, значит значение по умолчанию.
==
const PI = 3.14; 
объявление переменной через const, то мы сразу должны присвоить значение, нельзя оставлять без значения. И в последующей мы не можем изменить это значение.  Переменные такие называются константы, и должны прописываться полностью в верхнем регистре. 
===
объявление переменной через var, это старый способ задать переменную, сегодня следует использовать let 
==ЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂЂ    $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$==

ТИПЫ ДАННЫХ, которые можем сохранять в переменных !
типы данных делятся на 
- ссылочные,
- примитивные 
1. numbers (числа), к этому типу относятся все числа, дробные(числа с плавающей точкой), целые, отрицательные, положительные.
2. string (строчки) обязательно в кавычках. 
3. boolean (логический тип) для сохранения состояний, к примеру элемент активен. Для сохранения состояний, элемент активен не активен, что либо 2 варианта. Для проверки различных условий. 
4. null  (значение неизвестно) такое значение устанавливается либо походу программы становиться null
5. undefined (Значение не было присвоено) такая переменная в том случае если мы не уставили какое либо значение. 
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Определение типа данных переменной typeof имяПеременной.  

$$$$$$$$$$$$$$$$$$$$
"Nan" относится к числам, но числом не является. и всегда указывается на то что арифметическую операцию не удалось выполнить.
все кроме (+) приводят операнды (то что слева и справа) к числу. Бинарный 2 операнда, унарный 1 операнд. 
С плавающей точкой, вычисления не всегда точны. 

$$$$$$$$$$$$$$$$$$$$$$$$
Оператор присваивания
